//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/InputSystem/SpaceshipInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SpaceshipInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SpaceshipInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SpaceshipInputs"",
    ""maps"": [
        {
            ""name"": ""Spaceship"",
            ""id"": ""133ada40-f775-43f3-9df2-c6f1cb3cf5cd"",
            ""actions"": [
                {
                    ""name"": ""MoveForward"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b272f444-8c5d-408f-8baa-ac23e5ef8247"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstFire"",
                    ""type"": ""Button"",
                    ""id"": ""a034f569-0644-454f-85f0-2335f44039f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondFire"",
                    ""type"": ""Button"",
                    ""id"": ""619231c6-1258-4191-9afa-36c7a1e37581"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""76dd71d2-d86d-4943-b201-ea20fb02202a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""558d2e06-0b90-498f-a5db-2a9f33124a58"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29c40322-223b-4a20-85ae-47af62afbd54"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8748612-e925-438b-aaee-4b3b8b5bb0f4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""33cca764-c3e4-4845-b02d-0dc329bf2108"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForward"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ed0a5984-3077-430b-a752-c18b10324b05"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fc6bacd4-bd31-4c22-8d0a-314b8e113e61"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""62cf0a44-4c66-4570-9520-b77f416280de"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""20de749b-da80-4d19-976f-def118726e14"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Spaceship
        m_Spaceship = asset.FindActionMap("Spaceship", throwIfNotFound: true);
        m_Spaceship_MoveForward = m_Spaceship.FindAction("MoveForward", throwIfNotFound: true);
        m_Spaceship_FirstFire = m_Spaceship.FindAction("FirstFire", throwIfNotFound: true);
        m_Spaceship_SecondFire = m_Spaceship.FindAction("SecondFire", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Spaceship
    private readonly InputActionMap m_Spaceship;
    private ISpaceshipActions m_SpaceshipActionsCallbackInterface;
    private readonly InputAction m_Spaceship_MoveForward;
    private readonly InputAction m_Spaceship_FirstFire;
    private readonly InputAction m_Spaceship_SecondFire;
    public struct SpaceshipActions
    {
        private @SpaceshipInputs m_Wrapper;
        public SpaceshipActions(@SpaceshipInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveForward => m_Wrapper.m_Spaceship_MoveForward;
        public InputAction @FirstFire => m_Wrapper.m_Spaceship_FirstFire;
        public InputAction @SecondFire => m_Wrapper.m_Spaceship_SecondFire;
        public InputActionMap Get() { return m_Wrapper.m_Spaceship; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpaceshipActions set) { return set.Get(); }
        public void SetCallbacks(ISpaceshipActions instance)
        {
            if (m_Wrapper.m_SpaceshipActionsCallbackInterface != null)
            {
                @MoveForward.started -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnMoveForward;
                @MoveForward.performed -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnMoveForward;
                @MoveForward.canceled -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnMoveForward;
                @FirstFire.started -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnFirstFire;
                @FirstFire.performed -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnFirstFire;
                @FirstFire.canceled -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnFirstFire;
                @SecondFire.started -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnSecondFire;
                @SecondFire.performed -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnSecondFire;
                @SecondFire.canceled -= m_Wrapper.m_SpaceshipActionsCallbackInterface.OnSecondFire;
            }
            m_Wrapper.m_SpaceshipActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveForward.started += instance.OnMoveForward;
                @MoveForward.performed += instance.OnMoveForward;
                @MoveForward.canceled += instance.OnMoveForward;
                @FirstFire.started += instance.OnFirstFire;
                @FirstFire.performed += instance.OnFirstFire;
                @FirstFire.canceled += instance.OnFirstFire;
                @SecondFire.started += instance.OnSecondFire;
                @SecondFire.performed += instance.OnSecondFire;
                @SecondFire.canceled += instance.OnSecondFire;
            }
        }
    }
    public SpaceshipActions @Spaceship => new SpaceshipActions(this);
    public interface ISpaceshipActions
    {
        void OnMoveForward(InputAction.CallbackContext context);
        void OnFirstFire(InputAction.CallbackContext context);
        void OnSecondFire(InputAction.CallbackContext context);
    }
}
